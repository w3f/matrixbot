apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app.name" . }}
  labels:
    app: {{ include "app.name" . }}
spec:
  {{ if eq .Values.encryption.enabled true }}  
  replicas: 1
  {{ else }}
  replicas: {{ .Values.replicas }}
  {{ end }}
  revisionHistoryLimit: 3
  strategy:
    {{ if eq .Values.encryption.enabled true }}  
    type: Recreate
    {{ else }}
    type: RollingUpdate
    {{ end }}
  selector:
    matchLabels:
      app: {{ include "app.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "app.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      {{ if eq .Values.encryption.enabled true }}   
      initContainers:
      - name: volume-mount-permissions-data
        image: busybox
        command: ["sh", "-c", "chown -R 1001:1001 {{ .Values.encryption.store_path }}"]
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
        volumeMounts:
        - name: store
          mountPath: {{ .Values.encryption.store_path }}
      {{ end }}     
      containers:
      - name: {{ include "app.name" . }}
        image: {{ .Values.image.repo }}:{{ .Values.image.tag | default .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: {{ .Values.port }}
        readinessProbe:
          httpGet:
            path: /stats
            port: {{ .Values.port }}
          initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
          failureThreshold: {{ .Values.probes.failureThreshold }}
        livenessProbe:
          httpGet:
            path: /stats
            port: {{ .Values.port }}
          initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
          periodSeconds: {{ .Values.probes.periodSeconds }}
          timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
          failureThreshold: {{ .Values.probes.failureThreshold }}
        {{ if ne .Values.environment "ci" }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        {{ end }}
        volumeMounts:
        - name: config
          mountPath: /etc/opsdroid  
        {{ if eq .Values.encryption.enabled true }}
        - name: store
          mountPath: {{ .Values.encryption.store_path }}  
        {{ end }}   
      volumes:
      - name: config
        configMap:
          name: {{ include "app.name" . }}   
      {{ if eq .Values.encryption.enabled true }}    
      - name: store
        {{ if and (ne .Values.environment "ci") (ne .Values.environment "local") }}
        persistentVolumeClaim:
          claimName: {{ include "app.name" . }}-store
        {{ else }}
        emptyDir: {}  
        {{ end }} 
      {{ end }}    